@mixin transform($property) {
    -webkit-transform: $property;
    -moz-transform: $property;
    -o-transform: $property;
    transform: $property;
}

@mixin transition($property) {
    -webkit-transition: $property;
    -moz-transition: $property;
    -o-transition: $property;
    transition: $property;
}


@mixin user-select($property) {
    user-select: $property;
    -moz-user-select: $property;
    -webkit-user-select: $property;
}

//media query
@mixin media($point) {

    $mini: "only screen and (max-width: 600px)";
    $midi: "only screen and (max-width: 960px)";
    $maxi: "only screen and (max-width: 1200px)";

    @if $point==mini {
        @media #{$mini} {
            @content;
        }
    }

    @else if $point==midi {
        @media #{$midi} {
            @content;
        }
    }

    @else if $point==maxi {
        @media #{$maxi} {
            @content;
        }
    }

}

@mixin button-bg($bg) {
    background: $bg;

    &:hover {
        background: darken($bg, 8%);
        transition: all 0.3s ease;
    }

    &:active {
        background: darken($bg, 25%);
    }
}

// Flexbox
@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex-direction-column() {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column
}

@mixin flex-direction-row() {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row
}

@mixin inline-flexbox() {
    display: -moz-inline-box;
    display: -ms-inline-flexbox;
    display: -webkit-inline-box;
    display: inline-flex;
}

@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex: $values;
    -webkit-flex: $values;
    -ms-flex: $values;
    flex: $values;
}

@mixin order($val) {
    -webkit-box-ordinal-group: $val;
    -moz-box-ordinal-group: $val;
    -ms-flex-order: $val;
    -webkit-order: $val;
    order: $val;
}

@mixin align($align) {
    -webkit-flex-align: $align;
    -ms-flex-align: $align;
    -webkit-align-items: $align;
    align-items: $align;
}

@mixin align-self($val) {
    -ms-flex-item-align: $val;
    -ms-grid-row-align: $val;
    align-self: $val;
}

@mixin justify-content($val) {
    -webkit-justify-content: $val;
    justify-content: $val;
}

@mixin box-shadow($val) {
    -webkit-box-shadow: $val;
    box-shadow: $val;
}

@mixin text-decoration($val) {
    text-decoration: $val;
    -moz-text-decoration: $val;
}

@mixin animation-name($val) {
    -webkit-animation-name: $val;
    animation-name: $val;
}

@mixin animation-duration($val) {
    -webkit-animation-duration: $val;
    animation-duration: $val;
}

@mixin animation-iteration-count($val) {
    -webkit-animation-iteration-count: $val;
    animation-iteration-count: $val;
}

@mixin animation-direction($val) {
    -webkit-animation-direction: $val;
    animation-direction: $val;
}